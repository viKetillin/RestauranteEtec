// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestauranteEtec.Data;

namespace RestauranteEtec.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210810234810_criar-bancp")]
    partial class criarbancp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("RestauranteEtec.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Texto")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Cargo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "CEO, Cofundador"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Cozinheiro Chefe"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Chefe de Cozinha"
                        });
                });

            modelBuilder.Entity("RestauranteEtec.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Entradas"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Prato Principal"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Sobremesa"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Bebidas"
                        });
                });

            modelBuilder.Entity("RestauranteEtec.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Assunto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataContato")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailPessoa")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mensagem")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Retorno")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<bool>("ExibirHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("OrdemExibicao")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Texto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("Funcionario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CargoId = 1,
                            ExibirHome = true,
                            Foto = "images/funcionarios/chef-4.jpg",
                            Nome = "John Gustavo",
                            OrdemExibicao = (byte)1,
                            Texto = "I am an ambitious workaholic, but apart from that, pretty simple person."
                        },
                        new
                        {
                            Id = 2,
                            CargoId = 2,
                            ExibirHome = true,
                            Foto = "images/funcionarios/chef-2.jpg",
                            Nome = "Michelle Fraulen",
                            OrdemExibicao = (byte)2,
                            Texto = "I am an ambitious workaholic, but apart from that, pretty simple person."
                        },
                        new
                        {
                            Id = 3,
                            CargoId = 3,
                            ExibirHome = true,
                            Foto = "images/funcionarios/chef-3.jpg",
                            Nome = "Alfred Smith",
                            OrdemExibicao = (byte)3,
                            Texto = "I am an ambitious workaholic, but apart from that, pretty simple person."
                        },
                        new
                        {
                            Id = 4,
                            CargoId = 3,
                            ExibirHome = true,
                            Foto = "images/funcionarios/chef-1.jpg",
                            Nome = "Antonio Santibanez",
                            OrdemExibicao = (byte)4,
                            Texto = "I am an ambitious workaholic, but apart from that, pretty simple person."
                        });
                });

            modelBuilder.Entity("RestauranteEtec.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("ExibirHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Foto")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Relato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ExibirHome")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FotoPessoa")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TipoPessoa")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Relato");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Convidados")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailPessoa")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FonePessoa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomePessoa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Funcionario", b =>
                {
                    b.HasOne("RestauranteEtec.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("RestauranteEtec.Models.Produto", b =>
                {
                    b.HasOne("RestauranteEtec.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
